\indent Acorde a lo solicitado, mostraremos los mejores y peores casos para nuestro algoritmo, y adem\'as, daremos el tiempo estimado 
seg\'un la complejidad del algoritmo calculada anteriormente.\\

Luego de chequear varios instancias, pudimos llegar a la conclusi\'on que uno de los tipos de casos que resulta m\'as beneficioso para nuestro algoritmo
es en el cual ambas ramas de la mediana se encuentran ya ordenadas\\

Para llegar a dicha conclusi\'on trabajamos con un total de 100 instancias y un n entre 1 y 1000000 obtuvimos que nuestro
algoritmo finaliza lo solicitado demorando 330 milisegundos.\\

Para una mayor observacion desarrollamos el siguiente grafico con las instancias:\\

\vspace*{0.3cm} \vspace*{0.3cm}
  \begin{center}
 \includegraphics[scale=0.8]{./EJ2/grafico2ejmejorcaso.png}
  \end{center}
  \vspace*{0.3cm}
  
Y dividiendo por la complejidad de nuestro algoritmo llegamos a:\\

\vspace*{0.3cm} \vspace*{0.3cm}
  \begin{center}
 \includegraphics[scale=0.8]{./EJ2/grafico2ejmejorcaso1.png}
  \end{center}
  \vspace*{0.3cm}


Se puede observar, como luego de realizar la divisi\'on por la complejidad cuando el n aumenta el valor tiende a 0.\\

A continuaci\'on mostraremos una tabla  con las ultimas 10 instancias y mostraremos un promedio de la totalidad de las mismas.\\

\begin{table}[H]

    \begin{tabular}{ | l | l |l |}
    \hline
	Tamaño($n$) & Tiempo($t$) & \textbf{$t /n.log(n)$}  \\ \hline
900000 & 300000 & 0,0560 \\ \hline
910000 & 303000 & 0,0559 \\ \hline
920000 & 306000 & 0,0558 \\ \hline
930000 & 309000 & 0,0557 \\ \hline
940000 & 312000 & 0,0555 \\ \hline
950000 & 315000 & 0,0555 \\ \hline
960000 & 318000 & 0,0554 \\ \hline
970000 & 321000 & 0,0553 \\ \hline
980000 & 324000 & 0,0552 \\ \hline
990000 & 327000 & 0,0551 \\ \hline
1000000 & 330000 & 0,0550 \\ \hline
    \textbf{Promedio} & & 0,087  \\ \hline

    \end{tabular}
\end{table}

\textbf{Promedio final de todas las instancias: 0,087}\\

Verificando el peor caso, llegamos a la conclusi\'on que el tipo de caso en el que resulta menos beneficioso trabajar con nuestro algoritmo ser\'a cuando
ambas ramas se encuentran desordenadas.
\\

Realizando experimentos con un total de 100 instancias con un n variando desde 1 hasta 1000000 obtuvimos que nuestro
algoritmo, resuelve lo mencionado en 385 milisegundos, a continuaci\'on mostraremos un gr\'afico que ejemplifica lo enunciado.\\

\vspace*{0.3cm} \vspace*{0.3cm}
  \begin{center}
 \includegraphics[scale=0.8]{./EJ2/grafico2ejpeorcaso.png}
  \end{center}
  \vspace*{0.3cm}


Y dividiendo por la complejidad propuesta llegamos a:\\

\vspace*{0.3cm} \vspace*{0.3cm}
  \begin{center}
 \includegraphics[scale=0.8]{./EJ2/grafico2ejpeorcaso1.png}
  \end{center}
  \vspace*{0.3cm}


Se puede observar que a pesar de tardar varios milisegundos este tipo de caso, al dividir por vuestra complejidad
es propenso a tender a 0 quedando comparativamente por encima del mejor caso.\\

A continuaci\'on mostraremos una tabla de valores de lass ultimas 10 instancias y
mostraremos el promedio total conseguido .\\


\begin{table}[H]

    \begin{tabular}{ | l | l |l |}
    \hline
Tamaño($n$) & Tiempo($t$) & \textbf{$t /n.log(n)$}  \\ \hline
900000 & 355000	 & 0,066  \\ \hline
910000 & 358000 & 0,0660 \\ \hline
920000 & 361000 & 0,0658 \\ \hline
930000 & 364000 & 0,0656 \\ \hline
940000 & 367000 & 0,0654 \\ \hline
950000 & 370000 & 0,0651 \\ \hline
960000 & 373000 & 0,0649 \\ \hline
970000 & 376000 & 0,0647 \\ \hline
980000 & 379000 & 0,0645 \\ \hline
990000 & 382000 & 0,0643 \\ \hline
1000000 & 385000 & 0,0642 \\ \hline
    \textbf{Promedio} & & 0,148
 \\ \hline

    \end{tabular}
\end{table}

\textbf{Promedio total conseguido: 0,148}\\

Se puede observar como el peor caso presenta un promedio mayor que el mejor caso, concluyendo lo que enunciamos inicialmente.\\
